#!/bin/bash

# Pre-commit hook for waybar-ai
# This hook enforces code quality standards before commits

set -e

echo "🔍 Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if clang-format is available
if ! command -v clang-format &> /dev/null; then
    echo -e "${RED}❌ clang-format not found. Please install clang-format to continue.${NC}"
    echo "   On Arch: sudo pacman -S clang-tools"
    echo "   On Ubuntu: sudo apt install clang-format"
    echo "   On macOS: brew install clang-format"
    exit 1
fi

# Get list of staged C++ files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(cpp|hpp|h|c)$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}✅ No C++ files to check.${NC}"
    exit 0
fi

echo "📝 Checking C++ files: $STAGED_FILES"

# Check clang-format
echo "🎨 Running clang-format check..."
FORMAT_ISSUES=0

for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        # Check if file needs formatting
        if ! clang-format --style=file --dry-run --Werror "$file" >/dev/null 2>&1; then
            echo -e "${YELLOW}⚠️  $file needs formatting${NC}"
            FORMAT_ISSUES=1
        fi
    fi
done

if [ $FORMAT_ISSUES -eq 1 ]; then
    echo -e "${RED}❌ clang-format check failed!${NC}"
    echo ""
    echo "To fix formatting issues, run:"
    echo "  clang-format --style=file -i $STAGED_FILES"
    echo ""
    echo "Or to auto-fix all C++ files:"
    echo "  find src -name '*.cpp' -o -name '*.hpp' | xargs clang-format --style=file -i"
    echo ""
    exit 1
fi

# Check for common C++ issues
echo "🔍 Running basic C++ checks..."

for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        # Check for TODO/FIXME comments (warn only)
        if grep -n "TODO\|FIXME" "$file" >/dev/null 2>&1; then
            echo -e "${YELLOW}⚠️  $file contains TODO/FIXME comments${NC}"
        fi
        
        # Check for debug prints (warn only)
        if grep -n "std::cout\|printf\|cout" "$file" >/dev/null 2>&1; then
            echo -e "${YELLOW}⚠️  $file may contain debug prints${NC}"
        fi
    fi
done

# Check for large files (warn if > 1000 lines)
for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        LINES=$(wc -l < "$file")
        if [ $LINES -gt 1000 ]; then
            echo -e "${YELLOW}⚠️  $file is large ($LINES lines) - consider splitting${NC}"
        fi
    fi
done

echo -e "${GREEN}✅ All pre-commit checks passed!${NC}"
exit 0
